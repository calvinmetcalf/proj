{"ts":1357222491163,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function toGeoJSON(data,cb){\r\nvar ajax = function (url) {\r\n    // the following is from JavaScript: The Definitive Guide\r\n    if (XMLHttpRequest === undefined) {\r\n\t\twindow.XMLHttpRequest = function() {\r\n\t\t\ttry {\r\n\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.6.0\");\r\n\t\t\t}\r\n\t\t\tcatch  (e1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.3.0\");\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e2) {\r\n\t\t\t\t\tthrow new Error(\"XMLHttpRequest is not supported\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n    var request = new XMLHttpRequest();\r\n    var response;\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            if(JSON) {\r\n                response = JSON.parse(request.responseText);\r\n        \t} else {\r\n        \t\tresponse = eval(\"(\"+ request.responseText + \")\");\r\n        \t}\r\n           \r\n        }\r\n    };\r\n    request.open(\"GET\", url,false);\r\n    request.send();\r\n    return response;\r\n};\r\nif(typeof data === \"string\"){\r\n    \r\n    return toGeoJSON(ajax(data));\r\n}\r\n    var outPut = { \"type\": \"FeatureCollection\",\r\n  \"features\": []};\r\n    var fl = data.features.length;\r\n    var i = 0;\r\n    while(fl>i){\r\n     var ft = data.features[i];\r\n/* as only ESRI based products care if all the features are the same type of geometry, check for geometry type at a feature level*/\r\n     var outFT = {\r\n            \"type\": \"Feature\",\r\n            \"properties\":prop(ft.attributes)\r\n        };\r\n        if(ft.geometry.x){\r\n//check if it's a point\r\n          outFT.geometry=point(ft.geometry);\r\n        }else if(ft.geometry.points){\r\n//check if it is a multipoint\r\n            outFT.geometry=points(ft.geometry);\r\n            }else if(ft.geometry.paths){\r\n//check if a line (or \"ARC\" in ESRI terms)\r\n         outFT.geometry=line(ft.geometry);\r\n        }else if(ft.geometry.rings){\r\n//check if a poly.\r\n           outFT.geometry=poly(ft.geometry);  \r\n        }\r\n        \r\n     outPut.features.push(outFT);\r\n     i++;\r\n    }\r\nfunction point(geometry){\r\n//this one is easy\r\n    return {\"type\": \"Point\",\"coordinates\": [geometry.x,geometry.y]};    \r\n}\r\nfunction points(geometry){\r\n//checks if the multipoint only has one point, if so exports as point instead\r\n    if(geometry.points.length===1){\r\n        return {\"type\": \"Point\",\"coordinates\": geometry.points[0]};\r\n    }else{\r\n        return { \"type\": \"MultiPoint\",\"coordinates\":geometry.points}; \r\n    }\r\n}\r\nfunction line(geometry){\r\n//checks if their are multiple paths or just one\r\n    if(geometry.paths.length===1){\r\n        return {\"type\": \"LineString\",\"coordinates\": geometry.paths[0]};\r\n    }else{\r\n        return { \"type\": \"MultiLineString\",\"coordinates\":geometry.paths}; \r\n    }\r\n}\r\nfunction poly(geometry){\r\n//first we check for some easy cases, like if their is only one ring\r\n    if(geometry.rings.length===1){\r\n        return {\"type\": \"Polygon\",\"coordinates\": geometry.rings};\r\n    }else{\r\n/*if it isn't that easy then we have to start checking ring direction, basically the ring goes clockwise its part of the polygon, if it goes counterclockwise it is a hole in the polygon, but geojson does it by haveing an array with the first element be the polygons and the next elements being holes in it*/\r\n        return decodePolygon(geometry.rings);\r\n    }\r\n}\r\nfunction decodePolygon(a){\r\n//returns the feature\r\n    var coords = [],type;\r\n    var len = a.length;\r\n    var i = 0;\r\n    var len2 = coords.length-1;\r\n    while(len>i){\r\n        if(ringIsClockwise(a[i])){\r\n            coords.push([a[i]]);\r\n            len2++;\r\n        }else{\r\n         coords[len2].push(a[i]);\r\n        }\r\n     i++;\r\n    }\r\n    if(coords.length===1){\r\n        type=\"Polygon\";\r\n    }else{\r\n        type=\"MultiPolygon\";\r\n    }\r\n    return {\"type\":type,\"coordinates\":coords};\r\n}\r\n/*determine if polygon ring coordinates are clockwise. clockwise signifies outer ring, counter-clockwise an inner ring\r\n   or hole. this logic was found at http://stackoverflow.com/questions/1165647/how-to-determine-if-a-list-of-polygon-\r\n   points-are-in-clockwise-order\r\n   this code taken from http://esri.github.com/geojson-utils/src/jsonConverters.js by James Cardona (MIT lisense)\r\n   */\r\n  function ringIsClockwise(ringToTest) {\r\n    var total = 0,\r\n        i = 0,\r\n        rLength = ringToTest.length,\r\n        pt1 = ringToTest[i],\r\n        pt2;\r\n    for (i; i < rLength - 1; i++) {\r\n      pt2 = ringToTest[i + 1];\r\n      total += (pt2[0] - pt1[0]) * (pt2[1] + pt1[1]);\r\n      pt1 = pt2;\r\n    }\r\n    return (total >= 0);\r\n  }\r\n  function prop(a){\r\n var p = {};\r\n for(var k in a){\r\n  if(a[k]){\r\n   p[k]=a[k];   \r\n  }\r\n }\r\n return p;\r\n}\r\nif(cb){\r\n cb(outPut);\r\n}else{\r\nreturn outPut;  \r\n}\r\n}\r\nif (typeof module !== \"undefined\") module.exports = toGeoJSON;"]],"start1":0,"start2":0,"length1":0,"length2":4700}]],"length":4700}
{"contributors":[],"silentsave":true,"ts":1357223185737,"patch":[[{"diffs":[[0,"ned) {\r\n"],[-1,"\t"],[1,"    "],[0,"\twindow."]],"start1":155,"start2":155,"length1":17,"length2":20}]],"length":4703,"saved":false}
{"contributors":[],"silentsave":true,"ts":1357580204731,"patch":[[{"diffs":[[0,"){\r\n"],[-1,"var ajax = function (url) {\r\n    // the following is from JavaScript: The Definitive Guide\r\n    if (XMLHttpRequest === undefined) {\r\n    \twindow.XMLHttpRequest = function() {\r\n\t\t\ttry {\r\n\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.6.0\");\r\n\t\t\t}\r\n\t\t\tcatch  (e1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.3.0\");\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e2) {\r\n\t\t\t\t\tthrow new Error(\"XMLHttpRequest is not supported\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n    var request = new XMLHttpRequest();\r\n    var response;\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            if(JSON) {\r\n                response = JSON.parse(request.responseText);\r\n        \t} else {\r\n        \t\tresponse = eval(\"(\"+ request.responseText + \")\");\r\n        \t}\r\n           \r\n        }\r\n    };\r\n    request.open(\"GET\", url,false);"],[1,"    if(typeof data === 'string'){\r\n        if(cb){\r\n            ajax(data,function(d){toGeoJSON(d,cb)});\r\n            return;\r\n        }else{"],[0,"\r\n    "],[-1,"request.send();\r\n    return response;\r\n};\r\nif(typeof data === \"string\"){\r\n    \r\n"],[1,"    "],[0,"    "]],"start1":26,"start2":26,"length1":953,"length2":159},{"diffs":[[0,"ata));\r\n"],[1,"        }\r\n    "],[0,"}\r\n    v"]],"start1":208,"start2":208,"length1":16,"length2":31},{"diffs":[[0,";  \r\n}\r\n"],[1,"\r\n\r\nfunction ajax(url, cb){\r\n    if (XMLHttpRequest === undefined) {\r\n        window.XMLHttpRequest = function() {\r\n        \ttry {\r\n\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.6.0\");\r\n\t\t\t}\r\n\t\t\tcatch  (e1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.3.0\");\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e2) {\r\n\t\t\t\t\tthrow new Error(\"XMLHttpRequest is not supported\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n   \r\n       \r\n    // the following is from JavaScript: The Definitive Guide\r\n\r\n    var response,async,request = new XMLHttpRequest();\r\n\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            if(JSON) {\r\n                response = JSON.parse(request.responseText);\r\n        \t} else {\r\n        \t\tresponse = eval(\"(\"+ request.responseText + \")\");\r\n        \t}\r\n            if(cb){\r\n           cb(response);\r\n            }\r\n        }\r\n    };\r\n    if(cb){\r\n        async=true;\r\n    }else{\r\n        async=false;\r\n    }\r\n    request.open(\"GET\", url,async);\r\n    request.send();\r\n    if(!cb){\r\n    return response;\r\n}\r\n  \r\n}\r\n"],[0,"}\r\nif (t"]],"start1":3851,"start2":3851,"length1":16,"length2":1091}]],"length":4999,"saved":false}
{"ts":1357580341082,"patch":[[{"diffs":[[0,"    "],[-1,"return toGeoJSON(ajax(data))"],[1,"ajax(data,function(d){toGeoJSON(d,cb)});\r\n            return"],[0,";\r\n "]],"start1":181,"start2":181,"length1":36,"length2":68}]],"length":5031,"saved":false}
{"ts":1357580346251,"patch":[[{"diffs":[[0,"        }else{\r\n"],[1,"            cb\r\n"],[0,"            ajax"]],"start1":157,"start2":157,"length1":32,"length2":48}]],"length":5047,"saved":false}
{"ts":1357580347163,"patch":[[{"diffs":[[0,"      cb"],[1,"="],[0,"\r\n      "]],"start1":179,"start2":179,"length1":16,"length2":17}]],"length":5048,"saved":false}
{"ts":1357580360434,"patch":[[{"diffs":[[0,"     cb="],[1,"this.send"],[0,"\r\n      "]],"start1":180,"start2":180,"length1":16,"length2":25}]],"length":5057,"saved":false}
{"ts":1357580582025,"patch":[[{"diffs":[[0,"his.send"],[1,";"],[0,"\r\n      "]],"start1":189,"start2":189,"length1":16,"length2":17}]],"length":5058,"saved":false}
{"ts":1357580870629,"patch":[[{"diffs":[[0,"e{\r\n"],[-1,"            cb=this.send;\r\n"],[0,"    "]],"start1":169,"start2":169,"length1":35,"length2":8}]],"length":5031,"saved":false}
{"ts":1357580872197,"patch":[[{"diffs":[[0,"    "],[-1,"ajax(data,function(d){toGeoJSON(d,cb)});\r\n            return"],[1,"return toGeoJSON(ajax(data))"],[0,";\r\n "]],"start1":181,"start2":181,"length1":68,"length2":36}]],"length":4999,"saved":false}
{"ts":1357580946667,"patch":[[{"diffs":[[0,"SON("],[-1,"ajax(data)"],[0,");\r\n"]],"start1":198,"start2":198,"length1":18,"length2":8}]],"length":4989,"saved":false}
{"ts":1357580953738,"patch":[[{"diffs":[[0,"        }else{\r\n"],[1,"            ajax(data)\r\n"],[0,"            retu"]],"start1":157,"start2":157,"length1":32,"length2":56}]],"length":5013,"saved":false}
{"ts":1357580971786,"patch":[[{"diffs":[[0,"jax(data"],[1,","],[0,")\r\n     "]],"start1":186,"start2":186,"length1":16,"length2":17}]],"length":5014,"saved":false}
{"ts":1357580999016,"patch":[[{"diffs":[[0,"ax(data,"],[1,"function()"],[0,")\r\n     "]],"start1":187,"start2":187,"length1":16,"length2":26}]],"length":5024,"saved":false}
{"ts":1357581002764,"patch":[[{"diffs":[[0,"unction("],[1,"d"],[0,"))\r\n    "]],"start1":196,"start2":196,"length1":16,"length2":17}]],"length":5025,"saved":false}
{"ts":1357581005676,"patch":[[{"diffs":[[0,"ction(d)"],[1,"{\r\n                \r\n            }"],[0,")\r\n     "]],"start1":198,"start2":198,"length1":16,"length2":50}]],"length":5059,"saved":false}
{"ts":1357581010199,"patch":[[{"diffs":[[0,"urn "],[-1,"toGeoJSON();"],[0,"\r\n  "]],"start1":258,"start2":258,"length1":20,"length2":8}]],"length":5047,"saved":false}
{"ts":1357581011996,"patch":[[{"diffs":[[0,"            "],[1,"toGeoJSON();"],[0,"\r\n          "]],"start1":213,"start2":213,"length1":24,"length2":36}]],"length":5059,"saved":false}
{"ts":1357581014722,"patch":[[{"diffs":[[0,"GeoJSON("],[1,"d,"],[0,");\r\n    "]],"start1":227,"start2":227,"length1":16,"length2":18}]],"length":5061,"saved":false}
{"ts":1357581020789,"patch":[[{"diffs":[[0,"oJSON(d,"],[1,"this"],[0,");\r\n    "]],"start1":229,"start2":229,"length1":16,"length2":20}]],"length":5065,"saved":false}
{"ts":1357581024983,"patch":[[{"diffs":[[0,"N(d,this"],[1,".send"],[0,");\r\n    "]],"start1":233,"start2":233,"length1":16,"length2":21}]],"length":5070,"saved":false}
{"ts":1357581891851,"patch":[[{"diffs":[[0,"){\r\n"],[-1,"    if(typeof data === 'string'){\r\n        if(cb){\r\n            ajax(data,function(d){toGeoJSON(d,cb)});\r\n            return;\r\n        }else{\r\n            ajax(data,function(d){\r\n                toGeoJSON(d,this.send);\r\n            })\r\n            return \r\n        }\r\n    }\r\n"],[0,"    "]],"start1":26,"start2":26,"length1":283,"length2":8},{"diffs":[[0,"\n}\r\n"],[-1,"\r\n\r\nfunction ajax(url, cb){\r\n    if (XMLHttpRequest === undefined) {\r\n        window.XMLHttpRequest = function() {\r\n        \ttry {\r\n\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.6.0\");\r\n\t\t\t}\r\n\t\t\tcatch  (e1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.3.0\");\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e2) {\r\n\t\t\t\t\tthrow new Error(\"XMLHttpRequest is not supported\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n   \r\n       \r\n    // the following is from JavaScript: The Definitive Guide\r\n\r\n    var response,async,request = new XMLHttpRequest();\r\n\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            if(JSON) {\r\n                response = JSON.parse(request.responseText);\r\n        \t} else {\r\n        \t\tresponse = eval(\"(\"+ request.responseText + \")\");\r\n        \t}\r\n            if(cb){\r\n           cb(response);\r\n            }\r\n        }\r\n    };\r\n    if(cb){\r\n        async=true;\r\n    }else{\r\n        async=false;\r\n    }\r\n    request.open(\"GET\", url,async);\r\n    request.send();\r\n    if(!cb){\r\n    return response;\r\n}\r\n  \r\n}\r\n"],[0,"}\r\ni"]],"start1":3651,"start2":3651,"length1":1083,"length2":8}]],"length":3720,"saved":false}
{"ts":1357581893528,"patch":[[{"diffs":[[0,"(data,cb){\r\n"],[1,"    if(typeof data === 'string'){\r\n        if(cb){\r\n            ajax(data,function(d){toGeoJSON(d,cb)});\r\n            return;\r\n        }else{\r\n            return toGeoJSON(ajax(data));\r\n        }\r\n    }\r\n"],[0,"    var outP"]],"start1":18,"start2":18,"length1":24,"length2":228},{"diffs":[[0,";  \r\n}\r\n"],[1,"\r\n\r\nfunction ajax(url, cb){\r\n    if (XMLHttpRequest === undefined) {\r\n        window.XMLHttpRequest = function() {\r\n        \ttry {\r\n\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.6.0\");\r\n\t\t\t}\r\n\t\t\tcatch  (e1) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP.3.0\");\r\n\t\t\t\t}\r\n\t\t\t\tcatch (e2) {\r\n\t\t\t\t\tthrow new Error(\"XMLHttpRequest is not supported\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n   \r\n       \r\n    // the following is from JavaScript: The Definitive Guide\r\n\r\n    var response,async,request = new XMLHttpRequest();\r\n\r\n    request.onreadystatechange = function() {\r\n        if (request.readyState === 4 && request.status === 200) {\r\n            if(JSON) {\r\n                response = JSON.parse(request.responseText);\r\n        \t} else {\r\n        \t\tresponse = eval(\"(\"+ request.responseText + \")\");\r\n        \t}\r\n            if(cb){\r\n           cb(response);\r\n            }\r\n        }\r\n    };\r\n    if(cb){\r\n        async=true;\r\n    }else{\r\n        async=false;\r\n    }\r\n    request.open(\"GET\", url,async);\r\n    request.send();\r\n    if(!cb){\r\n    return response;\r\n}\r\n  \r\n}\r\n"],[0,"}\r\nif (t"]],"start1":3851,"start2":3851,"length1":16,"length2":1091}]],"length":4999,"saved":false}
